/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package CapaGrafica;

import CapaPersistencia.Registro;
import com.toedter.calendar.demo.DateChooserPanel;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author ezequ
 */
public class RegistroFaltaDocente extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(RegistroFaltaDocente.class.getName());
    private final String ciDocentelogueado;
    private final String rolUsuariologueado;
    
    private void cargarComboBoxDocentes() {
    Registro registroDB = new Registro();
    try {
        ArrayList<String> cisDocentes = registroDB.buscarCIDOCENTE();
        
        // Limpiamos el combo box por si acaso
        comboCIDocente.removeAllItems();
        
        if (cisDocentes.isEmpty()) {
            comboCIDocente.addItem("No hay docentes registrados");
            // Deshabilitar el botón de guardar o mostrar error
        } else {
            // Añadimos cada CI al JComboBox
            for (String ci : cisDocentes) {
                comboCIDocente.addItem(ci);
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al cargar docentes: " + e.getMessage(), "Error de DB", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void configurarVistaPorRol() {
        if ("Docente".equals(this.rolUsuariologueado)) {
        
        labelCIDOCENTE.setVisible(false); 
        comboCIDocente.setVisible(false); 

        } else if ("Admin".equals(this.rolUsuariologueado)) {
        // Administrador: Mostramos el selector y lo llenamos.
        labelCIDOCENTE.setText("Seleccionar C.I. Ausente:");
        labelCIDOCENTE.setVisible(true);
        comboCIDocente.setVisible(true);

        
        cargarComboBoxDocentes();
        }
      }
    /**
     * Creates new form RegistroFaltaDocente
     */
    public RegistroFaltaDocente(String ci, String rol) {
        
        
        this.ciDocentelogueado = ci;
        this.rolUsuariologueado = rol;
        
        initComponents();
        configurarVistaPorRol();
        
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnRegistrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        desdeChooser = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        hastaChooser = new com.toedter.calendar.JDateChooser();
        comboMotivo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        comboCIDocente = new javax.swing.JComboBox<>();
        labelCIDOCENTE = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));

        btnRegistrar.setText("Registrar ");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Fecha inicio inasistencia");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Fecha final inasistencia");

        comboMotivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Salud", "Licencia", "Desconocido", "Otros" }));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Motivo");

        labelCIDOCENTE.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelCIDOCENTE.setForeground(new java.awt.Color(0, 0, 0));
        labelCIDOCENTE.setText("CI Docente");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(btnRegistrar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(hastaChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(desdeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(comboCIDocente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(79, 79, 79)
                                        .addComponent(labelCIDOCENTE)
                                        .addGap(0, 54, Short.MAX_VALUE)))))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(desdeChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelCIDOCENTE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboCIDocente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(hastaChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(comboMotivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnRegistrar)
                .addGap(48, 48, 48))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        String ciDocente = this.ciDocentelogueado;
        String motivo;
        motivo = (String) comboMotivo.getSelectedItem();
        Date desde = desdeChooser.getDate();
        Date hasta = hastaChooser.getDate();
        
        if( desde == null || hasta == null){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fecha de inicio y fin obligatoriomanete");
        }
        if(desde.after(hasta)){
            JOptionPane.showMessageDialog(null, "La fecha de inicio no puede ser posterior a la fecha de finalizacion");
        }
        
        SimpleDateFormat formato = new SimpleDateFormat("yyyy-MM-dd");
        String formatoHasta = formato.format(hasta);
        String formatoDesde = formato.format(desde);
        
            
    if (this.rolUsuariologueado.equals("Admin")) {
        // ADMIN: Toma la CI del ComboBox seleccionado
        ciDocente = (String) comboCIDocente.getSelectedItem();
        
        if (ciDocente == null || ciDocente.equals("No hay docentes registrados")) {
            JOptionPane.showMessageDialog(this, "Seleccione una C.I. de docente válida.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
    } else {
        
        ciDocente = this.ciDocentelogueado; 
    }
  
        Registro registroDB = new Registro();
        
        try{
            registroDB.RegistrarFalta(formatoDesde, formatoHasta, motivo, ciDocente);
            JOptionPane.showMessageDialog(null, "Falta regristrada por motivo: " + motivo, "registro Exitoso", JOptionPane.INFORMATION_MESSAGE);
            
            desdeChooser.setDate(null);
            hastaChooser.setDate(null);
            comboMotivo.setSelectedIndex(0);
        } catch (Exception e){
            JOptionPane.showMessageDialog(this, "Fallo al registrar falta" + e.getMessage(), "Error de Base de Datos", JOptionPane.ERROR_MESSAGE);
        }
        
     
        
    }//GEN-LAST:event_btnRegistrarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JComboBox<String> comboCIDocente;
    private javax.swing.JComboBox<String> comboMotivo;
    private com.toedter.calendar.JDateChooser desdeChooser;
    private com.toedter.calendar.JDateChooser hastaChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelCIDOCENTE;
    // End of variables declaration//GEN-END:variables
}
